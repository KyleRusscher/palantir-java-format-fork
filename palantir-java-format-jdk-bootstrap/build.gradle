import me.champeau.jmh.JMHTask

apply plugin: 'java-library'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.revapi'

configurations {
    formatterNativeImage
}

dependencies {
    annotationProcessor "org.immutables:value"

    api project(':palantir-java-format-spi')
    compileOnly 'org.immutables:value::annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // So that we have pjf on our test classpath
    testImplementation project(':palantir-java-format')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    formatterNativeImage(project(':palantir-java-format-native')) {
        attributes {
            attribute(LibraryElements.LIBRARY_ELEMENTS_ATTRIBUTE, project.objects.named(LibraryElements, 'nativeImage'))
        }
    }
}

tasks.named('test', Test.class) {
    inputs.files(configurations.named('formatterNativeImage'))
    environment.put('NATIVE_IMAGE_CLASSPATH', configurations.formatterNativeImage.asPath)
}
